#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time : 2019/12/25 17:55
# @Author : liuhuiling
print()
'''
-计算思维与程序设计
-计算生态与Python语言
-用户体验与软件产品
-基本的程序设计模式

-计算思维与程序设计
3种人类思维：
    逻辑思维：推理和演绎(行成公式)，数学为代表，A-->B B-->C A-->C
    实证思维：实验和验证，物理为代表，提出引力波<-- 实验
    计算思维：设计和构造(模拟过程)，计算机为代表，汉诺塔递归    课后练习题 

抽象和自动化
-计算思维：Computational Thinking
-抽象问题的计算过程，利用计算机自动化求解 （不抽象因果关系）
-计算思维是基于计算机的思维方式

举例：
1.计数求和：计算1-100的计数和
    逻辑思维： 数学家高斯推导出通用公式 sum = (a1+a2)*n/2
    计算思维：   程序代码
            sum = 0
            for i in range(1,101):
                s += 1
2.圆周率计算
    逻辑思维    π公式
    计算思维    随机撒点
    
3.汉诺塔问题
    逻辑思维    2**n - 1
    计算思维    模拟移动步骤，可以输出移动步骤
    
4.天气预报 实证思维+逻辑思维
    MM5模型  超算
     
-计算生态与Python语言  
计算生态的应用
    变成的起点不是算法而是系统
    变成如同搭积木，利用计算生态为主要模式
    变成的目标是快速解决问题
    python计算生态推荐：https://python123.io/index/topics/curated_packages

-用户体验与软件产品
实现功能-->关注体验
    用户体验指用户对产品建立的主观感受和认识
    关心功能实现，更要关心用户体验，才能做出好产品
    编程只是手段，不是目的，程序最终为人类服务
提高用户体验的方法：
方法一：进度展示
    如果程序需要计算时间，可能产生等待，请增加进度展示
    如果程序有若干步骤，需要提示用户，请增加进度展示
    如果程序可能存在大量次数的循环，请增加进度展示
方法二：异常处理
    当获得用户输入，对合规性需要检查，需要异常处理
    当读写文件时，对结果进行判断，需要异常处理
    当进行输入输出时，对运算结果进行判断，需要异常处理
其他类方法
    打印输出：特定位置，输出程序运行的过程信息
    日志文件：对程序异常及用户使用进行定期记录
    帮助信息：给用户多种方式提供帮助信息 
软件程序--> 软件产品 ：用户体验是程序到产品的关键环节
    
'''
