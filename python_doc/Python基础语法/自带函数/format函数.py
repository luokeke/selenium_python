#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time : 2019/11/22 0:22
# @Author : liuhuiling

name='玲玲'
age = 29
print("name is : {}, age is : {}  " .format(name,age))  #结果：name is : 玲玲, age is : 29
C = 3.023
print("转换后的温度值为：{: .2f}".format(C)) #结果：转换后的温度值为： 3.02
print("{: ,.2f}".format(12345.6789)) #结果：12,345.68

'''
参考链接：https://www.runoob.com/python/att-string-format.html
print 用fromat()函数格式化
{} 为槽，占位符
-- :    引导符号
-- 填充   用于填充的单个字符
-- 对齐   左对齐<  右对齐>  居中对齐^
-- 宽度   槽设定的输出宽度
print("{0:=^20}".format("PYTHON"))  #结果  =======PYTHON=======
# :=^20，= 填充符号，^居中对齐，20输出宽度
print("{:^3.0f}%[{} -> {}]".format(c,a,b))
-- , 数字的千位分隔符
-- .精度    浮点数小数精度或字符串最大输出长度  例如 .2f  
-- 类型 整数类型 b,c,d,o,x,X  浮点数类型 e,E,f,%
print("{: ,.2f}".format(12345.6789)) #结果：12,345.68
'''
'''以某一字符填充，两种表示方法'''
#输出  =======PYTHON=======
print("{0:=^20}".format("PYTHON"))   # :=^20，= 填充符号，^居中对齐，20输出宽度
print("PYTHON".center(20,"="))#字符串str根据宽度width居中，如果需要的话，就用fillchar进行填充，默认是空格。

'''format还能这样用 推荐'''
name = '玲玲'
age = 29
job = "面包师"
str3 = '''
    ------- hello word {0} -------
    Name:{0}
    Age:{1}
    Job:{2}
'''.format(name,age,job)
print(str3)
'''
结果：
------- hello word 玲玲 -------
    Name:玲玲
    Age:29
    Job:面包师
'''

'''
三次方格式化
描述
获得用户输入的一个数字，可能是整数或浮点数，a，计算a的三次方值，并打印输出。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬
输出结果采用宽度20个字符、居中输出、多余字符采用减号(-)填充。‪‬‪‬‪‬‪‬‪‬‮‬‪‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‭‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬
如果结果超过20个字符，则以结果宽度为准。
输入输出示例              输入          输出
示例 1                    10              --------1000--------
'''
m = eval(input())
print("{:-^20}".format(pow(m,3)))